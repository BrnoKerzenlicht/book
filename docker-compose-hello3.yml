version: "3"
services:
  web:
    # Pull the image from the registry.
    image: bronkerzenlicht/friendlyhello
    deploy:
      # Run 5 instances of that image as a service called web, limiting each one to use, at most, 10% of the CPU (across all cores), and 50MB of RAM.
      replicas: 5
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      # Immediately restart containers if one fails.
      restart_policy:
        condition: on-failure
    # Map port 80 on the host to web’s port 80.
    ports:
      - "80:80"
    # Instruct web’s containers to share port 80 via a load-balanced network called webnet. (Internally, the containers themselves publish to web’s port 80 at an ephemeral port.)
    networks:
      - webnet
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    # giving the visualizer access to the host’s socket file for Docker.
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      # ensuring that this service only ever runs on a swarm manager -- never a worker.
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - "/home/docker/data:/data"
    deploy:
      placement:
        constraints: [node.role == manager]
    command: redis-server --appendonly yes
    networks:
      - webnet
# Define the webnet network with the default settings (which is a load-balanced overlay network).
networks:
  webnet:
